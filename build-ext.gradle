import com.liferay.gradle.plugins.defaults.tasks.CheckOSGiBundleStateTask

buildscript {
	dependencies {
		classpath group: "com.liferay", name: "com.liferay.gradle.plugins.defaults", version: "latest.release"
	}

	repositories {
		maven {
			url "https://cdn.lfrs.sl/repository.liferay.com/nexus/content/groups/public"
		}
	}
}

configure(subprojects.findAll {!it.childProjects}) {
	repositories {
		maven {
			url "https://cdn.lfrs.sl/repository.liferay.com/nexus/content/groups/public"
		}
	}

	liferay {
		deployDir = new File("${rootDir}/build/deploy")
	}

	task copyTestRuntimeLibs(type: Copy) {
		into "${rootDir}/build/deploy"
		from configurations.testRuntime - configurations.testCompile - configurations.compile
	}

	test {
		ignoreFailures = false
	}
}

task checkOSGiBundlesStates(type: CheckOSGiBundleStateTask)

task checkDocker() {
	doLast {
		def url = "http://localhost:8080"

		println("Trying to reach " + url)

		while (true) {
			try {
				print(".")

				url.toURL().text

				println("Portal startup finished")

				break
			}
			catch (Exception e) {
				Thread.sleep(1000)
			}
		}
	}

	finalizedBy checkOSGiBundlesStates
}

task deployDependencies() {
	subprojects.findAll{!it.childProjects}.each {
		dependsOn("${it.path}:deployDependencies")
	}
}

task stopDocker() {
	doLast {
		exec {
			commandLine 'docker', 'stop', 'arquillian-liferay-example'
			ignoreExitValue true
		}

		exec {
			commandLine 'docker', 'rm', 'arquillian-liferay-example'
			ignoreExitValue true
		}
	}
}

task runDocker() {
	dependsOn deployDependencies
	dependsOn stopDocker

	doLast {
		exec {
			commandLine 'docker',
					'run',
					'-d',
					'-p', '8080:8080',
					'-p', '8099:8099',
					'-p', '11311:11311',
					'-e', 'JAVA_OPTS=-Djava.rmi.server.hostname=localhost -Dcom.sun.management.jmxremote.port=8099 -Dcom.sun.management.jmxremote.rmi.port=8099 -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.local.only=false',
					'-v', "${rootDir}/docker/portal-ext.properties:/usr/local/liferay-ce-portal-7.0-ga3/portal-ext-properties",
					'-v', "${rootDir}/build/deploy/:/usr/local/liferay-ce-portal-7.0-ga3/deploy",
					'--name', 'arquillian-liferay-example', 'mdelapenya/liferay-portal:7-ce-ga3-tomcat-hsql'
		}
	}

	finalizedBy checkDocker
}

task uploadArchives() {
	subprojects.findAll{!it.childProjects}.each {
		dependsOn("${it.path}:uploadArchives")
	}
}
